# Case 1: Empty items array
# Target: simulate a configuration where the data grid has no defined child items.
# Expected behavior: since there are no referenced widgets, the grid displays an empty layout area 
# without elements. This ensures that the layout handles absence of children gracefully, 
# without errors.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-empty
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [buttons, paragraphs, tables, piecharts, linecharts]
    asGrid: true
    items: []
---
# Case 2: Missing resource references
# Target: test what happens when item identifiers do not correspond to any known resource reference.
# Expected behavior: since there are no referenced widgets, the grid displays an empty layout area 
# without elements. The unresolved references are ignored during layout rendering.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-missing-resources
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [buttons, paragraphs, tables, piecharts, linecharts]
    asGrid: true
    items:
      - resourceRefId: unknown-widget-1
      - resourceRefId: unknown-widget-2
  resourcesRefs:
    items: []
---
# Case 3: Single child widget (list mode)
# Target: confirm that when the grid layout is disabled, 
# the widget behaves as a simple list displaying its single child vertically.
# Expected behavior: a single element is rendered, filling the available horizontal space 
# and aligned consistently with list-style rendering.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-single-list
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [tables]
    asGrid: false
    items:
      - resourceRefId: example-table-basic
  resourcesRefs:
    items:
      - id: example-table-basic
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-table-basic
        namespace: krateo-system
        resource: tables
        verb: GET
---
# Case 4: Multiple widgets in list mode
# Target: confirm that when the grid layout is disabled, 
# the widget behaves as a simple list displaying its children vertically.
# Expected behavior: multiple elements are rendered, filling the available horizontal space 
# and aligned consistently with list-style rendering.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-multiple-list
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [linecharts, piecharts, tables]
    asGrid: false
    items:
      - resourceRefId: example-linechart-multi
      - resourceRefId: example-table-basic
      - resourceRefId: example-piechart-full-fill
  resourcesRefs:
    items:
      - id: example-linechart-multi
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-linechart-multi
        namespace: krateo-system
        resource: linecharts
        verb: GET
      - id: example-table-basic
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-table-basic
        namespace: krateo-system
        resource: tables
        verb: GET
      - id: example-piechart-full-fill
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-piechart-full-fill
        namespace: krateo-system
        resource: piecharts
        verb: GET
---
# Case 5: Multiple widgets in grid mode (default settings)
# Target: verify the grid layout when several widgets are placed together 
# and no explicit grid configuration is provided.
# Expected behavior: widgets are distributed evenly using default spacing and responsive behavior, 
# maintaining visual balance across screen sizes.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-multiple-default
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [linecharts, piecharts, tables]
    asGrid: true
    items:
      - resourceRefId: example-linechart-multi
      - resourceRefId: example-table-basic
      - resourceRefId: example-piechart-full-fill
  resourcesRefs:
    items:
      - id: example-linechart-multi
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-linechart-multi
        namespace: krateo-system
        resource: linecharts
        verb: GET
      - id: example-table-basic
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-table-basic
        namespace: krateo-system
        resource: tables
        verb: GET
      - id: example-piechart-full-fill
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-piechart-full-fill
        namespace: krateo-system
        resource: piecharts
        verb: GET
---
# Case 6: Custom grid configuration
# Target: validate how explicit layout parameters redefine spacing and column distribution
# across screen sizes.
# Expected behavior: widgets are displayed in a dense grid,
# emphasizing the effect of manual configuration compared to the default automatic layout.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-custom-grid
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [linecharts, piecharts, tables]
    asGrid: true
    grid:
      gutter: 4
      xs: 1    
      sm: 2    
      md: 3    
      lg: 4    
      xl: 5    
      xxl: 6   
    items:
      - resourceRefId: example-linechart-multi
      - resourceRefId: example-table-basic
      - resourceRefId: example-piechart-full-fill
  resourcesRefs:
    items:
      - id: example-linechart-multi
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-linechart-multi
        namespace: krateo-system
        resource: linecharts
        verb: GET
      - id: example-table-basic
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-table-basic
        namespace: krateo-system
        resource: tables
        verb: GET
      - id: example-piechart-full-fill
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-piechart-full-fill
        namespace: krateo-system
        resource: piecharts
        verb: GET
---
# Case 7: Grid using prefix for contextual filtering
# Target: test how the prefix parameter allows child widgets 
# to access shared contextual data such as applied filters.
# Expected behavior: all child widgets use the same prefix to retrieve and display 
# contextually filtered content, maintaining data consistency within the grid.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-with-prefix
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [panels]
    asGrid: true
    prefix: example-datagrid-with-prefix-filter-prefix
    items:
      - resourceRefId: example-datagrid-with-prefix-panel-1
      - resourceRefId: example-datagrid-with-prefix-panel-2
  resourcesRefs:
    items:
      - id: example-datagrid-with-prefix-panel-1
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-datagrid-with-prefix-panel-1
        namespace: krateo-system
        resource: panels
        verb: GET
      - id: example-datagrid-with-prefix-panel-2
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-datagrid-with-prefix-panel-2
        namespace: krateo-system
        resource: panels
        verb: GET
---
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-with-prefix-filter
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-datagrid-with-prefix-filter-prefix
    fields:
      - label: Title
        name: 
        - title
        type: string
---
kind: Markdown
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-with-prefix-panel-markdown-1
  namespace: krateo-system
spec:
  widgetData:
    markdown: |
      This is the first panel content text.
---
kind: Panel
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-with-prefix-panel-1
  namespace: krateo-system
spec:
  widgetData:
    actions: {}
    items: []
    title: First panel with filterable title
  resourcesRefs:
    items:
      - id: example-datagrid-with-prefix-panel-markdown-1
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-datagrid-with-prefix-panel-markdown-1
        namespace: krateo-system
        resource: markdowns
        verb: GET
---
kind: Markdown
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-with-prefix-panel-markdown-2
  namespace: krateo-system
spec:
  widgetData:
    markdown: |
      This is the second panel content text.
---
kind: Panel
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-with-prefix-panel-2
  namespace: krateo-system
spec:
  widgetData:
    actions: {}
    items: []
    title: Second panel with filterable title
  resourcesRefs:
    items:
      - id: example-datagrid-with-prefix-panel-markdown-2
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-datagrid-with-prefix-panel-markdown-2
        namespace: krateo-system
        resource: markdowns
        verb: GET
---
# Case 8: Nested data grid
# Target: verify hierarchical layout composition by including a grid within another grid.
# Expected behavior: both grids render correctly, with the inner one maintaining its own spacing 
# and alignment rules, confirming isolation between parent and child grid configurations.
kind: DataGrid
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-datagrid-nested
  namespace: krateo-system
spec:
  widgetData:
    allowedResources: [datagrids, tables]
    asGrid: true
    grid:
      gutter: 16
      lg: 2
      md: 2
      sm: 1
      xl: 2
      xs: 1
    items:
      - resourceRefId: example-datagrid-multiple-default
      - resourceRefId: example-table-basic
  resourcesRefs:
    items:
      - id: example-datagrid-multiple-default
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-datagrid-multiple-default
        namespace: krateo-system
        resource: datagrids
        verb: GET
      - id: example-table-basic
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: example-table-basic
        namespace: krateo-system
        resource: tables
        verb: GET
