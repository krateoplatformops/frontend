# Case 1: Empty events list
# Expected behavior: The widget will render an empty area (no events shown).
# Useful to verify how the dashboard behaves when no events are returned by the data source.
kind: EventList
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-eventlist-empty
  namespace: krateo-system
spec:
  widgetData:
    events: []
---
# Case 2: Basic static event list
# Expected behavior: Displays a predefined list of Kubernetes events without live updates.
# This configuration is suitable when events are fetched once and not updated via SSE.
kind: EventList
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-eventlist-basic
  namespace: krateo-system
spec:
  widgetData:
    events:
      - icon: "fa-exclamation-circle"
        reason: "FailedScheduling"
        message: "0/1 nodes are available: 1 Insufficient memory."
        type: "Warning"
        count: 3
        firstTimestamp: "2024-04-20T12:34:56Z"
        lastTimestamp: "2024-04-20T12:45:00Z"
        metadata:
          name: "my-pod.17d90d9c8ab2b1e1"
          namespace: "default"
          uid: "d1234567-89ab-4def-8123-abcdef012345"
          creationTimestamp: "2024-04-20T12:34:56Z"
        involvedObject:
          apiVersion: "v1"
          kind: "Pod"
          name: "my-pod"
          namespace: "default"
          uid: "abcd-1234"
        source:
          component: "scheduler"
      - icon: "fa-rocket"
        reason: "Started"
        message: "Started container nginx"
        type: "Normal"
        eventTime: "2024-04-21T08:20:00Z"
        metadata:
          name: "nginx-pod.17d90d9c8ab2b1e2"
          namespace: "default"
          uid: "f1234567-89ab-4def-8123-abcdef012346"
          creationTimestamp: "2024-04-21T08:20:00Z"
        involvedObject:
          apiVersion: "v1"
          kind: "Pod"
          name: "nginx-pod"
          namespace: "default"
          uid: "defg-5678"
        source:
          component: "kubelet"
          host: "worker-node-1"
---
# Case 3: Events filtered by prefix
# Expected behavior: The widget displays only events whose name or message starts with the defined prefix.
# Useful when using the global FiltersProvider to narrow down the list dynamically.
kind: EventList
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-eventlist-with-prefix
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-eventlist-with-prefix-filter-prefix
    events:
      - icon: "fa-exclamation-circle"
        reason: "FailedScheduling"
        message: "0/1 nodes are available: 1 Insufficient memory."
        type: "Warning"
        count: 3
        firstTimestamp: "2024-04-20T12:34:56Z"
        lastTimestamp: "2024-04-20T12:45:00Z"
        metadata:
          name: "my-pod.17d90d9c8ab2b1e1"
          namespace: "default"
          uid: "d1234567-89ab-4def-8123-abcdef012345"
          creationTimestamp: "2024-04-20T12:34:56Z"
        involvedObject:
          apiVersion: "v1"
          kind: "Pod"
          name: "my-pod"
          namespace: "default"
          uid: "abcd-1234"
        source:
          component: "scheduler"
      - icon: "fa-rocket"
        reason: "Started"
        message: "Started container nginx"
        type: "Normal"
        eventTime: "2024-04-21T08:20:00Z"
        metadata:
          name: "nginx-pod.17d90d9c8ab2b1e2"
          namespace: "default"
          uid: "f1234567-89ab-4def-8123-abcdef012346"
          creationTimestamp: "2024-04-21T08:20:00Z"
        involvedObject:
          apiVersion: "v1"
          kind: "Pod"
          name: "nginx-pod"
          namespace: "default"
          uid: "defg-5678"
        source:
          component: "kubelet"
---
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-eventlist-with-prefix-filter
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-eventlist-with-prefix-filter-prefix
    fields:
      - label: Filter pod name
        name: 
        - metadata.name
        type: string
---
# Case 4: Live updates via SSE
# Expected behavior: The widget connects to the provided SSE endpoint and updates in real time as new events are received.
# Use this configuration to test streaming behavior from a live backend.
kind: EventList
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-eventlist-sse
  namespace: krateo-system
spec:
  widgetData:
    sseEndpoint: "krateo-test-mock-simulate"
    sseTopic: "k8s.cluster.events"
    events: []