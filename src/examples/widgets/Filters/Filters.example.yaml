# Case 1: String filter
# Target: text-based filtering on a single string field.
# Expected behavior: matches rows containing the substring (case-insensitive).
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-filters-string
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-filters-string
    fields:
      - label: Pod Name
        name:
          - metadata.name
        type: string
---
# Case 2: Number filter
# Target: numeric filtering for integer or float fields.
# Expected behavior: matches rows with exact numeric value.
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-filters-number
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-filters-number
    fields:
      - label: CPU Cores
        name:
          - spec.resources.cpu
        type: number
---
# Case 3: Boolean filter
# Target: true/false filtering for logical properties.
# Expected behavior: filters resources by boolean state.
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-filters-boolean
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-filters-boolean
    fields:
      - label: Active
        name:
          - spec.resources.active
        type: boolean
---
# Case 4: Date filter
# Target: time-based filtering on a single date field.
# Expected behavior: matches resources created on the selected date.
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-filters-date
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-filters-date
    fields:
      - label: Created At
        name:
          - metadata.creationTimestamp
        type: date
---
# Case 5: Date range filter
# Target: time-window filtering between two selected dates.
# Expected behavior: shows resources with timestamps inside the selected range.
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-filters-daterange
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-filters-daterange
    fields:
      - label: Created between
        name:
          - metadata.creationTimestamp
        type: daterange
---
# Case 6: Combined filters
# Target: mixed configuration to test multiple field types.
# Expected behavior: combines string, number, boolean, and date filters in the same form.
kind: Filters
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: example-filters-combined
  namespace: krateo-system
spec:
  widgetData:
    prefix: example-filters-combined
    fields:
      - label: Pod Name
        name:
          - metadata.name
        type: string
      - label: CPU Cores
        name:
          - spec.resources.cpu
        type: number
      - label: Active
        name:
          - spec.resources.active
        type: boolean
      - label: Created At
        name:
          - metadata.creationTimestamp
        type: date
