kind: Panel
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: firework-form-panel
  namespace: krateo-system
spec:
  widgetData:
    actions: {}
    title: Firework App Form
    items:
      - resourceRefId: firework-form
  resourcesRefs:
    items:
      - id: firework-form
        apiVersion: widgets.templates.krateo.io/v1beta1
        name: firework-form
        namespace: krateo-system
        resource: forms
        verb: GET
---
kind: Form
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: firework-form
  namespace: krateo-system
spec:
  widgetData:
    schema: {}
    submitActionId: firework-submit-action
    actions:
      rest:
        - id: firework-submit-action
          resourceRefId: resource-ref-1
          type: rest
          onSuccessNavigateTo: /compositions/${metadata.namespace}/${metadata.name}
          payloadToOverride:
          - name: metadata.name
            value: ${ git.toRepo.name }
          headers:
            - 'Accept: application/json'
  widgetDataTemplate:
    - forPath: schema
      expression: ${ .getSchema | .spec.versions[] | select(.name == "v2-0-0") | .schema.openAPIV3Schema.properties.spec }
  resourcesRefs:
    items:
      - id: resource-ref-1
        apiVersion: composition.krateo.io/v2-0-0
        name: new-app
        namespace: fireworksapp-system
        resource: fireworksapps
        verb: POST
  apiRef:
    name: firework-schema
    namespace: krateo-system
---
apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: firework-schema
  namespace: krateo-system
spec:
  api:
  - name: getSchema
    verb: GET
    path: "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/fireworksapps.composition.krateo.io"
    headers:
    - 'Accept: application/json'
---
kind: Form
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: test-firework-form
  namespace: krateo-system
spec:
  widgetData:
    buttonConfig:
      primary: 
        label: Custom submit
        icon: fa-rocket
      secondary:
        label: Go back
    submitActionId: firework-submit-action
    #   }
    stringSchema: |
      {
        "properties": {
          "metadata": {
            "properties": {
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string",
                "default": "{{ .Release.Namespace }}"
              },
              "test check": {
                "type": "boolean"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Mappa di etichette key/value per organizzare le risorse"
              },
              "annotations": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Annotazioni per informazioni aggiuntive non strutturate"
              },
              "createdBy": {
                "type": "string",
                "description": "Nome utente o sistema che ha creato questa risorsa"
              },
              "creationTimestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Data/ora di creazione della risorsa"
              },
              "lorem_1": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_2": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_3": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_4": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_5": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_6": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_7": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_8": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_9": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_10": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_11": {
                "type": "string",
                "description": "lorem ipsum"
              },
              "lorem_12": {
                "type": "string",
                "description": "lorem ipsum"
              }
            },
            "type": "object",
            "required": [
              "name", "lorem_12"
            ]
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleRef": {
                  "type": "object",
                  "required": ["apiGroup", "kind", "name"],
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "enum": ["rbac.authorization.k8s.io"]
                    },
                    "kind": {
                      "type": "string",
                      "enum": ["Role", "ClusterRole"]
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "subjects": {
                  "type": "object",
                  "required": ["kind", "name"],
                  "properties": {
                    "kind": {
                      "type": "string",
                      "enum": ["User", "Group", "ServiceAccount"]
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "namespace": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "required": ["roleRef", "subjects"]
              }
            }
          }
        },
        "required": [
          "metadata",
          "rules"
        ],
        "type": "object"
      }
    autocomplete:
      - path: name
        fetch:
          url: https://loremipsum.io/api/1
          verb: GET
    # objectFields:
    #   - path: users
    #     displayField: fullname
    objectFields:
      - path: rules
        displayField: subjects.name
    dependencies:
      - path: select2
        dependsField: 
          field: select1
        fetch:
          url: https://mocki.io/v1/64b17021-c9bd-45c6-bc79-f5bd126add5c/${select1}
          verb: GET
      - path: select3
        dependsField: 
          field: select2
        fetch:
          url: https://mocki.io/v1/64b17021-c9bd-45c6-bc79-f5bd126add5c
          verb: GET
    actions:
      rest:
        - id: firework-submit-action
          resourceRefId: resource-ref-1
          type: rest
          payloadKey: spec
          onSuccessNavigateTo: /compositions/${metadata.namespace}/${metadata.name}
          payloadToOverride:
            - name: metadata.name
              value: ${ git.toRepo.name }
          loading:
            display: true
          headers:
            - 'Accept: application/json'
  resourcesRefs:
    items:
      - id: resource-ref-1
        apiVersion: composition.krateo.io/v2-0-0
        name: new-app
        namespace: fireworksapp-system
        resource: fireworksapps
        verb: POST
