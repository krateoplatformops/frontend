kind: Panel
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: firework-form-panel
  namespace: krateo-system
spec:
  widgetData:
    title: Firework App Form
    items:
      - resourceRefId: firework-form
  resourcesRefs:
    - id: firework-form
      apiVersion: widgets.templates.krateo.io/v1beta1
      name: firework-form
      namespace: krateo-system
      resource: forms
      verb: GET
---
kind: Form
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: firework-form
  namespace: krateo-system
spec:
  widgetData:
    schema: {}
    submitActionId: firework-submit-action
  actions:
    rest:
      - id: firework-submit-action
        resourceRefId: resource-ref-1
        type: rest
        onSuccessNavigateTo: /compositions/${metadata.namespace}/${metadata.name}
        payloadToOverride:
        - name: metadata.name
          value: ${ git.toRepo.name }
        # - name: metadata.namespace
        #   value: ${ "fireworksapp-system" }

  widgetDataTemplate:
    - forPath: schema
      expression: ${ .getSchema | .spec.versions[] | select(.name == "v2-0-0") | .schema.openAPIV3Schema.properties.spec }
  
  resourcesRefs:
    - id: resource-ref-1
      apiVersion: composition.krateo.io/v2-0-0
      name: new-app
      namespace: fireworksapp-system
      resource: fireworksapps
      verb: POST
  apiRef:
    name: firework-schema
    namespace: krateo-system
---
apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: firework-schema
  namespace: krateo-system
spec:
  api:
  - name: getSchema
    verb: GET
    path: "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/fireworksapps.composition.krateo.io"
    headers:
    - 'Accept: application/json'