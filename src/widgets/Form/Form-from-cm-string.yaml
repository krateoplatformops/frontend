kind: Form
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: firework-form-from-string-schema
  namespace: krateo-system
spec:
  widgetData:
    stringSchema: |
      {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Application Name",
            "description": "The name of your fireworks app"
          },
          "image": {
            "type": "string",
            "title": "Container Image",
            "description": "Full image path (e.g., ghcr.io/org/image:tag)"
          },
          "replicas": {
            "type": "integer",
            "title": "Number of Replicas",
            "default": 1
          },
          "users": {
            "type": "array",
            "title": "Users",
            "description": "List of users for the application",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "role": {
                  "type": "string",
                  "title": "Role",
                  "enum": ["admin", "user", "viewer"]
                }
              },
              "required": ["name", "role"]
            }
          },
          "select1": {
            "type": "string",
            "title": "regione",
            "description": "The list of regions",
            "enum": [
              "Piemonte",
              "Lombardia",
              "Veneto",
              "Emilia-Romagna",
              "Toscana",
              "Liguria"
            ]
          },
          "select2": {
            "type": "string",
            "title": "province",
            "description": "The list of provinces",
          },
          "enableMetrics": {
            "type": "boolean",
            "title": "Enable Metrics",
            "default": false
          }
        },
        "required": ["name", "image"]
      }
    autocomplete:
      - path: name
        fetch:
          url: https://loremipsum.io/api/1
          verb: GET
    objectFields:
      - path: users
        displayField: name
    dependencies:
      - path: select2
        dependsField: 
          field: select1
        fetch:
          url: https://mocki.io/v1/64b17021-c9bd-45c6-bc79-f5bd126add5c
          verb: GET
    submitActionId: firework-submit-action-from-string-schema
    actions:
      rest:
        - id: firework-submit-action-from-string-schema
          onEventNavigateTo:
            eventReason: "CompositionCreated"
            url: "/compositions/${metadata.name}"
            timeout: 50
              
          payloadKey: spec
          resourceRefId: resource-ref-1
          type: rest
          # onSuccessNavigateTo: /compositions/${metadata.namespace}/${metadata.name}

          payloadToOverride:
          - name: metadata.name
            value: ${ git.toRepo.name }
          # - name: metadata.namespace
          #   value: ${ "krateo-system" }
        
          headers:
            - 'Accept: application/json'
  widgetDataTemplate:
    - forPath: stringSchema
      expression: ${ .getSchemaNotOrdered.data["values.schema.json"] }
  
  resourcesRefs:
    items:
      - id: resource-ref-1
        apiVersion: composition.krateo.io/v2-0-0
        name: new-app
        namespace: krateo-system
        resource: fireworksapps
        verb: POST
      
  apiRef:
    name: fireworksapp-schema-notordered
    namespace: krateo-system
---
apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: fireworksapp-schema-notordered
  namespace: krateo-system
spec:
  api:
  - headers:
    - 'Accept: application/json'
    name: getSchemaNotOrdered
    path: /api/v1/namespaces/krateo-system/configmaps/fireworksapps-v2-0-0-jsonschema-configmap
    verb: GET
