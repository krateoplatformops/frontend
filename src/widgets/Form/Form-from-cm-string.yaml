kind: Form
apiVersion: widgets.templates.krateo.io/v1beta1
metadata:
  name: firework-form-from-string-schema
  namespace: krateo-system
spec:
  widgetData:
    schema: {}
    submitActionId: firework-submit-action-from-string-schema
    actions:
      rest:
        - id: firework-submit-action-from-string-schema
          onEventNavigateTo:
            eventReason: "CompositionCreated"
            url: "/compositions/${metadata.name}"
            timeout: 50
              
          payloadKey: spec
          resourceRefId: resource-ref-1
          type: rest
          # onSuccessNavigateTo: /compositions/${metadata.namespace}/${metadata.name}

          payloadToOverride:
          - name: metadata.name
            value: ${ git.toRepo.name }
          # - name: metadata.namespace
          #   value: ${ "krateo-system" }
        

  widgetDataTemplate:
    - forPath: stringSchema
      expression: ${ .getSchemaNotOrdered.data["values.schema.json"] }
  
  resourcesRefs:
    - id: resource-ref-1
      apiVersion: composition.krateo.io/v2-0-0
      name: new-app
      namespace: krateo-system
      resource: fireworksapps
      verb: POST
      
  apiRef:
    name: fireworksapp-schema-notordered
    namespace: krateo-system
---
apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: fireworksapp-schema-notordered
  namespace: krateo-system
spec:
  api:
  - headers:
    - 'Accept: application/json'
    name: getSchemaNotOrdered
    path: /api/v1/namespaces/krateo-system/configmaps/fireworksapps-v2-0-0-jsonschema-configmap
    verb: GET
