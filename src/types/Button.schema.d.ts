/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ButtonSchema {
  /**
   * kubernetes api version
   */
  apiVersion: "widgets.templates.krateo.io/v1alpha1";
  /**
   * name of the k8s Custom Resource
   */
  Kind: "Button";
  /**
   * kubernetes metadata
   */
  metadata: {
    namespace: string;
    name: string;
  };
  spec: {
    /**
     * the data that will be passed to the widget on the frontend
     */
    widgetData: {
      /**
       * the color of the button
       */
      color?:
        | "default"
        | "primary"
        | "danger"
        | "blue"
        | "purple"
        | "cyan"
        | "green"
        | "magenta"
        | "pink"
        | "red"
        | "orange"
        | "yellow"
        | "volcano"
        | "geekblue"
        | "lime"
        | "gold";
      /**
       * the label of the button
       */
      label: string;
      /**
       * the icon of the button (font awesome icon name eg: 'fa-inbox')
       */
      icon?: string;
      /**
       * the size of the button
       */
      size?: "small" | "middle" | "large";
      /**
       * the visual style of the button
       */
      type?: "default" | "text" | "link" | "primary" | "dashed";
      /**
       * the id of the action to be executed when the button is clicked
       */
      clickActionId: string;
    };
    /**
     * the actions of the button
     */
    actions: {
      rest?: {
        type: "rest";
        id: string;
        name: string;
        verb: "GET" | "POST" | "DELETE";
        backendEndpointId: string;
        requireConfirmation?: boolean;
        onSuccessNavigateTo?: string;
        loading?: "global" | "inline" | "none";
      }[];
      navigate?: {
        id: string;
        type: "navigate";
        name: string;
        backendEndpointId: string;
        requireConfirmation?: boolean;
        loading?: "global" | "inline" | "none";
      }[];
      openDrawer?: {
        id: string;
        type: "openDrawer";
        name: string;
        contentWidgetRef: string;
        requireConfirmation?: boolean;
        loading?: "global" | "inline" | "none";
      }[];
      openModal?: {
        id: string;
        type: "openModal";
        name: string;
        contentWidgetRef: string;
        requireConfirmation?: boolean;
        loading?: "global" | "inline" | "none";
      }[];
    };
    backendEndpoints: {
      id: string;
      endpoint: string;
      verb: "GET" | "POST" | "DELETE";
    }[];
  };
}
